{"version":3,"sources":["firebase/index.js","App.js","reportWebVitals.js","index.js"],"names":["env","process","firebaseConfig","apiKey","REACT_APP_API_KEY","authDomain","REACT_APP_AUTH_DOMAIN","databaseURL","REACT_APP_DATABASE_URL","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_APP_ID","measurementId","REACT_APP_MEASUREMENT_ID","firebaseStore","firebase","initializeApp","firestore","App","useState","setLoading","time","setTime","useEffect","a","collection","get","res","empty","timeList","forEach","doc","push","data","searchTime","style","textAlign","verticalAlign","class","hour","minute","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAEMA,EAAMC,6jBAECC,EAAiB,CAC1BC,OAAQH,EAAII,kBACZC,WAAYL,EAAIM,sBAChBC,YAAaP,EAAIQ,uBACjBC,UAAWT,EAAIU,qBACfC,cAAeX,EAAIY,yBACnBC,kBAAmBb,EAAIc,8BACvBC,MAAOf,EAAIgB,iBACXC,cAAejB,EAAIkB,0BAOVC,EAHcC,IAASC,cAAcnB,GAGToB,Y,GAE1BF,EAAf,E,OCgBeG,MAlCf,WACE,MAA8BC,oBAAS,GAAvC,mBAAgBC,GAAhB,WACA,EAAwBD,mBAAS,IAAjC,mBAAOE,EAAP,KAAaC,EAAb,KAoBA,OAlBAC,qBAAU,YACQ,uCAAG,8BAAAC,EAAA,sEAECV,EAAcW,WAAW,QAAQC,MAFlC,YAEXC,EAFW,QAGTC,MAHS,yCAGK,IAHL,OAIbC,EAAW,GAEfF,EAAIG,SAAQ,SAAAC,GACVF,EAASG,KAAKD,EAAIE,WAGpBX,EAAQO,GAVS,2CAAH,qDAahBK,GACAd,GAAW,KACV,IAGD,sBAAKe,MAAO,CAAEC,UAAU,SAAUC,cAAc,UAAhD,UACE,wCACQhB,GAAQA,EAAK,IAAMA,EAAK,GAAGiB,MAAO,IAAKjB,GAAQA,EAAK,IAAMA,EAAK,GAAGkB,KAD1E,SACiFlB,GAAQA,EAAK,IAAMA,EAAK,GAAGmB,OAD5G,YAGA,wCACQnB,GAAQA,EAAK,IAAMA,EAAK,GAAGiB,MAAO,IAAKjB,GAAQA,EAAK,IAAMA,EAAK,GAAGkB,KAD1E,SACiFlB,GAAQA,EAAK,IAAMA,EAAK,GAAGmB,OAD5G,gBClBSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b9480ffd.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst env = process.env;\r\n\r\nexport const firebaseConfig = {\r\n    apiKey: env.REACT_APP_API_KEY,\r\n    authDomain: env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: env.REACT_APP_DATABASE_URL,\r\n    projectId: env.REACT_APP_PROJECT_ID,\r\n    storageBucket: env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: env.REACT_APP_APP_ID,\r\n    measurementId: env.REACT_APP_MEASUREMENT_ID,\r\n};\r\n\r\n// Firebaseを紐付け、初期化\r\nexport const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\n// Firestoreのインスタンス作成\r\nexport const firebaseStore = firebaseApp.firestore();\r\n\r\nexport default firebase;","import {useState, useEffect} from \"react\"\nimport { firebaseStore } from \"./firebase\";\n\nfunction App() {\n  const [loading, setLoading] = useState(true);\n  const [time, setTime] = useState([]);\n\n  useEffect(() => {\n    const searchTime = async() => {\n      // Firestoreのコレクションを指定してデータ取得。今回は全量を検索\n      const res = await firebaseStore.collection('time').get();\n      if (res.empty) return [];\n      let timeList = [];\n      // DocumentData型にはmapメソッドが定義されていないため、forEachのループでデータを加工\n      res.forEach(doc => {\n        timeList.push(doc.data());\n      })\n\n      setTime(timeList);\n    }\n\n    searchTime();\n    setLoading(false);\n  }, []);\n\n  return (\n    <div style={{ textAlign:\"center\", verticalAlign:\"middle\" }}>\n      <div>\n        class{time && time[0] && time[0].class}{\" \"}{time && time[0] && time[0].hour}時{time && time[0] && time[0].minute}分\n      </div>\n      <div>\n        class{time && time[1] && time[1].class}{\" \"}{time && time[1] && time[1].hour}時{time && time[1] && time[1].minute}分\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}