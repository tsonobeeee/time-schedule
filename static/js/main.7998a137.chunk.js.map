{"version":3,"sources":["firebase/index.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseStore","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","App","useState","loading","setLoading","time","setTime","useEffect","a","collection","get","res","empty","timeList","forEach","doc","push","data","searchTime","AppBar","position","Toolbar","Typography","variant","style","margin","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","row","scope","class","hour","minute","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOA8BaA,EAHcC,IAASC,cAZN,CAC1BC,OAAQ,0CACRC,WAAY,sCACZC,YAAa,qCACbC,UAAW,sBACXC,cAAe,kCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAOsBC,Y,GAE1BV,EAAf,E,uFC8BeW,MAzDf,WACE,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KAmBA,OAjBAC,qBAAU,YACQ,uCAAG,8BAAAC,EAAA,sEACCnB,EAAcoB,WAAW,QAAQC,MADlC,YACXC,EADW,QAETC,MAFS,yCAEK,IAFL,OAIbC,EAAW,GACfF,EAAIG,SAAQ,SAAAC,GACVF,EAASG,KAAKD,EAAIE,WAGpBX,EAAQO,GATS,2CAAH,qDAYhBK,GACAd,GAAW,KACV,IAGD,gCACE,cAACe,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,+BAKJ,qBAAKC,MAAO,CAAEC,OAAQ,IAAtB,SACE,cAACC,EAAA,EAAD,CAAgBC,UAAWC,IAA3B,SACE,eAACC,EAAA,EAAD,CAAOC,aAAW,eAAlB,UACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,oBACA,cAACA,EAAA,EAAD,CAAWC,MAAM,QAAjB,uBAGJ,cAACC,EAAA,EAAD,WACIhC,GAAWE,EAAK+B,KAAI,SAACC,GAAD,OACpB,eAACL,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWN,UAAU,KAAKW,MAAM,MAAhC,SACGD,EAAIE,QAEP,eAACN,EAAA,EAAD,CAAWC,MAAM,QAAjB,UAA0BG,EAAIG,KAA9B,SAAqCH,EAAII,OAAzC,cAJaJ,EAAIE,uBClCpBG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7998a137.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\n// const env = process.env;\r\n\r\n// export const firebaseConfig = {\r\n//     apiKey: env.REACT_APP_API_KEY,\r\n//     authDomain: env.REACT_APP_AUTH_DOMAIN,\r\n//     databaseURL: env.REACT_APP_DATABASE_URL,\r\n//     projectId: env.REACT_APP_PROJECT_ID,\r\n//     storageBucket: env.REACT_APP_STORAGE_BUCKET,\r\n//     messagingSenderId: env.REACT_APP_MESSAGING_SENDER_ID,\r\n//     appId: env.REACT_APP_APP_ID,\r\n//     measurementId: env.REACT_APP_MEASUREMENT_ID,\r\n// };\r\n\r\nexport const firebaseConfig = {\r\n    apiKey: \"AIzaSyABwCy81BdBJwkFiEd3831S1w7kEND-AFM\",\r\n    authDomain: \"time-schedule-58a95.firebaseapp.com\",\r\n    databaseURL: \"time-schedule-58a95.firebaseio.com\",\r\n    projectId: \"time-schedule-58a95\",\r\n    storageBucket: \"time-schedule-58a95.appspot.com\",\r\n    messagingSenderId: \"502283815228\",\r\n    appId: \"1:502283815228:web:e2d4af25dc15759b94b639\",\r\n    measurementId: \"G-MXWK01YSER\",\r\n};\r\n\r\n// Firebaseを紐付け、初期化\r\nexport const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\n// Firestoreのインスタンス作成\r\nexport const firebaseStore = firebaseApp.firestore();\r\n\r\nexport default firebase;","import { useState, useEffect } from \"react\"\nimport { firebaseStore } from \"./firebase\";\nimport { AppBar, Toolbar, Typography, TableContainer, Paper, Table, TableHead, TableCell, TableRow, TableBody } from \"@material-ui/core\";\n\n\nfunction App() {\n  const [loading, setLoading] = useState(true);\n  const [time, setTime] = useState([]);\n\n  useEffect(() => {\n    const searchTime = async() => {\n      const res = await firebaseStore.collection('time').get();\n      if (res.empty) return [];\n\n      let timeList = [];\n      res.forEach(doc => {\n        timeList.push(doc.data());\n      })\n\n      setTime(timeList);\n    }\n\n    searchTime();\n    setLoading(false);\n  }, []);\n\n  return (\n    <div>    \n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\">\n            Time Schedule\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <div style={{ margin: 10 }}>\n        <TableContainer component={Paper} >\n          <Table aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Class</TableCell>\n                <TableCell align=\"right\">Time</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {!loading && time.map((row) => (\n                <TableRow key={row.class}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.class}\n                  </TableCell>\n                  <TableCell align=\"right\">{row.hour}時{row.minute}分</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </div>\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}